//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WF.Player.Core.Live {
    using System;
    
    public  class APIRequest : object {
             
       
        
        private string ApplicationIDField;
        
        
        private string GCTokenField;
        
        
        private string UserGUIDField;
        
        
        private string UserTokenField;
        
        
        
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((this.ApplicationIDField.Equals(value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        
        public string GCToken {
            get {
                return this.GCTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.GCTokenField, value) != true)) {
                    this.GCTokenField = value;
                    this.RaisePropertyChanged("GCToken");
                }
            }
        }
        
        
        public string UserGUID {
            get {
                return this.UserGUIDField;
            }
            set {
                if ((this.UserGUIDField.Equals(value) != true)) {
                    this.UserGUIDField = value;
                    this.RaisePropertyChanged("UserGUID");
                }
            }
        }
        
        
        public string UserToken {
            get {
                return this.UserTokenField;
            }
            set {
                if ((this.UserTokenField.Equals(value) != true)) {
                    this.UserTokenField = value;
                    this.RaisePropertyChanged("UserToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    
    
    
    
    public  class GetCartridgeInfoRequest : WF.Player.Core.Live.APIRequest {
        
        
        private bool IncludeUserInformationField;
        
        
        private string WGCodeField;
        
        
        public bool IncludeUserInformation {
            get {
                return this.IncludeUserInformationField;
            }
            set {
                if ((this.IncludeUserInformationField.Equals(value) != true)) {
                    this.IncludeUserInformationField = value;
                    this.RaisePropertyChanged("IncludeUserInformation");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class SearchCartridgesRequest : WF.Player.Core.Live.APIRequest {
        
        
        private short PageNumberField;
        
        
        private short ResultsPerPageField;
        
        
        private WF.Player.Core.Live.CartridgeSearchArguments SearchArgumentsField;
        
        
        public short PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        
        public short ResultsPerPage {
            get {
                return this.ResultsPerPageField;
            }
            set {
                if ((this.ResultsPerPageField.Equals(value) != true)) {
                    this.ResultsPerPageField = value;
                    this.RaisePropertyChanged("ResultsPerPage");
                }
            }
        }
        
        
        public WF.Player.Core.Live.CartridgeSearchArguments SearchArguments {
            get {
                return this.SearchArgumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchArgumentsField, value) != true)) {
                    this.SearchArgumentsField = value;
                    this.RaisePropertyChanged("SearchArguments");
                }
            }
        }
    }
    
    
    
    
    
    public  class DownloadCartridgeRequest : WF.Player.Core.Live.APIRequest {
        
        
        private string WGCodeField;
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class UserCompletedCartridgeRequest : WF.Player.Core.Live.APIRequest {
        
        
        private string CompletionCodeField;
        
        
        private string NamesOfOtherUsersPlayingField;
        
        
        private string WGCodeField;
        
        
        public string CompletionCode {
            get {
                return this.CompletionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompletionCodeField, value) != true)) {
                    this.CompletionCodeField = value;
                    this.RaisePropertyChanged("CompletionCode");
                }
            }
        }
        
        
        public string NamesOfOtherUsersPlaying {
            get {
                return this.NamesOfOtherUsersPlayingField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesOfOtherUsersPlayingField, value) != true)) {
                    this.NamesOfOtherUsersPlayingField = value;
                    this.RaisePropertyChanged("NamesOfOtherUsersPlaying");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class GetCartridgeLogsRequest : WF.Player.Core.Live.APIRequest {
        
        
        private int LogsPerPageField;
        
        
        private int PageNumberField;
        
        
        private string WGCodeField;
        
        
        public int LogsPerPage {
            get {
                return this.LogsPerPageField;
            }
            set {
                if ((this.LogsPerPageField.Equals(value) != true)) {
                    this.LogsPerPageField = value;
                    this.RaisePropertyChanged("LogsPerPage");
                }
            }
        }
        
        
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class AddCartridgeLogRequest : WF.Player.Core.Live.APIRequest {
        
        
        private WF.Player.Core.Live.CartridgeLog LogField;
        
        
        private string WGCodeField;
        
        
        public WF.Player.Core.Live.CartridgeLog Log {
            get {
                return this.LogField;
            }
            set {
                if ((object.ReferenceEquals(this.LogField, value) != true)) {
                    this.LogField = value;
                    this.RaisePropertyChanged("Log");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class GetCartridgeVersionsRequest : WF.Player.Core.Live.APIRequest {
        
        
        private string WGCodeField;
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class GetCartridgeGWZRequest : WF.Player.Core.Live.APIRequest {
        
        
        private int VersionNumberField;
        
        
        private string WGCodeField;
        
        
        public int VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class UpdateCartridgeGWZRequest : WF.Player.Core.Live.APIRequest {
        
        
        private byte GWZField;
        
        
        private string LogEntryTextField;
        
        
        private string WGCodeField;
        
        
        public byte GWZ {
            get {
                return this.GWZField;
            }
            set {
                if ((object.ReferenceEquals(this.GWZField, value) != true)) {
                    this.GWZField = value;
                    this.RaisePropertyChanged("GWZ");
                }
            }
        }
        
        
        public string LogEntryText {
            get {
                return this.LogEntryTextField;
            }
            set {
                if ((object.ReferenceEquals(this.LogEntryTextField, value) != true)) {
                    this.LogEntryTextField = value;
                    this.RaisePropertyChanged("LogEntryText");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class UploadNewCartridgeRequest : WF.Player.Core.Live.APIRequest {
        
        
        private WF.Player.Core.Live.CartridgeActivities ActivityField;
        
        
        private string AuthorNameField;
        
        
        private string CartridgeDetailsDescriptionField;
        
        
        private byte CartridgeIconImageField;
        
        
        private byte CartridgePosterImageField;
        
        
        private short CompletionTimeField;
        
        
        private System.Nullable<short> CountryIDField;
        
        
        private byte GWZField;
        
        
        private bool IsPlayAnywhereField;
        
        
        private System.Nullable<double> LatitudeField;
        
        
        private bool ListCartridgeInDirectoryField;
        
        
        private System.Nullable<double> LongitudeField;
        
        
        private string NameField;
        
        
        private string SearchPageDescriptionField;
        
        
        private string StartingLocationDescriptionField;
        
        
        private System.Nullable<short> StateIDField;
        
        
        private string VersionNumberField;
        
        
        public WF.Player.Core.Live.CartridgeActivities Activity {
            get {
                return this.ActivityField;
            }
            set {
                if ((this.ActivityField.Equals(value) != true)) {
                    this.ActivityField = value;
                    this.RaisePropertyChanged("Activity");
                }
            }
        }
        
        
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        
        public string CartridgeDetailsDescription {
            get {
                return this.CartridgeDetailsDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CartridgeDetailsDescriptionField, value) != true)) {
                    this.CartridgeDetailsDescriptionField = value;
                    this.RaisePropertyChanged("CartridgeDetailsDescription");
                }
            }
        }
        
        
        public byte CartridgeIconImage {
            get {
                return this.CartridgeIconImageField;
            }
            set {
                if ((object.ReferenceEquals(this.CartridgeIconImageField, value) != true)) {
                    this.CartridgeIconImageField = value;
                    this.RaisePropertyChanged("CartridgeIconImage");
                }
            }
        }
        
        
        public byte CartridgePosterImage {
            get {
                return this.CartridgePosterImageField;
            }
            set {
                if ((object.ReferenceEquals(this.CartridgePosterImageField, value) != true)) {
                    this.CartridgePosterImageField = value;
                    this.RaisePropertyChanged("CartridgePosterImage");
                }
            }
        }
        
        
        public short CompletionTime {
            get {
                return this.CompletionTimeField;
            }
            set {
                if ((this.CompletionTimeField.Equals(value) != true)) {
                    this.CompletionTimeField = value;
                    this.RaisePropertyChanged("CompletionTime");
                }
            }
        }
        
        
        public System.Nullable<short> CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        
        public byte GWZ {
            get {
                return this.GWZField;
            }
            set {
                if ((object.ReferenceEquals(this.GWZField, value) != true)) {
                    this.GWZField = value;
                    this.RaisePropertyChanged("GWZ");
                }
            }
        }
        
        
        public bool IsPlayAnywhere {
            get {
                return this.IsPlayAnywhereField;
            }
            set {
                if ((this.IsPlayAnywhereField.Equals(value) != true)) {
                    this.IsPlayAnywhereField = value;
                    this.RaisePropertyChanged("IsPlayAnywhere");
                }
            }
        }
        
        
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        
        public bool ListCartridgeInDirectory {
            get {
                return this.ListCartridgeInDirectoryField;
            }
            set {
                if ((this.ListCartridgeInDirectoryField.Equals(value) != true)) {
                    this.ListCartridgeInDirectoryField = value;
                    this.RaisePropertyChanged("ListCartridgeInDirectory");
                }
            }
        }
        
        
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        
        public string SearchPageDescription {
            get {
                return this.SearchPageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchPageDescriptionField, value) != true)) {
                    this.SearchPageDescriptionField = value;
                    this.RaisePropertyChanged("SearchPageDescription");
                }
            }
        }
        
        
        public string StartingLocationDescription {
            get {
                return this.StartingLocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StartingLocationDescriptionField, value) != true)) {
                    this.StartingLocationDescriptionField = value;
                    this.RaisePropertyChanged("StartingLocationDescription");
                }
            }
        }
        
        
        public System.Nullable<short> StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        
        public string VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionNumberField, value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
    }
    
    
    
    
    
    public  class UpdateLogRequest : WF.Player.Core.Live.APIRequest {
        
        
        private WF.Player.Core.Live.CartridgeLog UpdatedLogField;
        
        
        public WF.Player.Core.Live.CartridgeLog UpdatedLog {
            get {
                return this.UpdatedLogField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedLogField, value) != true)) {
                    this.UpdatedLogField = value;
                    this.RaisePropertyChanged("UpdatedLog");
                }
            }
        }
    }
    
    
    
    
    
    public  class ArchiveLogRequest : WF.Player.Core.Live.APIRequest {
        
        
        private string LogGUIDField;
        
        
        public string LogGUID {
            get {
                return this.LogGUIDField;
            }
            set {
                if ((this.LogGUIDField.Equals(value) != true)) {
                    this.LogGUIDField = value;
                    this.RaisePropertyChanged("LogGUID");
                }
            }
        }
    }
    
    
    
    
    
    public  class UpdateCartridgeContributorsRequest : WF.Player.Core.Live.APIRequest {
        
        
        private string ContributorUserGUIDsField;
        
        
        private WF.Player.Core.Live.UpdateCartridgeContributorsRequest.PermissionType PermissionRequestedField;
        
        
        private string WGCodeField;
        
        
        public string ContributorUserGUIDs {
            get {
                return this.ContributorUserGUIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContributorUserGUIDsField, value) != true)) {
                    this.ContributorUserGUIDsField = value;
                    this.RaisePropertyChanged("ContributorUserGUIDs");
                }
            }
        }
        
        
        public WF.Player.Core.Live.UpdateCartridgeContributorsRequest.PermissionType PermissionRequested {
            get {
                return this.PermissionRequestedField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionRequestedField, value) != true)) {
                    this.PermissionRequestedField = value;
                    this.RaisePropertyChanged("PermissionRequested");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
        
        
        
        public enum PermissionType : int {
            
            
            Revoke = 0,
            
            
            ReadOnly = 1,
            
            
            ReadWrite = 2,
        }
    }
    
    
    
    
    
    public  class ArchiveCartridgeRequest : WF.Player.Core.Live.APIRequest {
        
        
        private string ArchiveLogEntryField;
        
        
        private string WGCodeField;
        
        
        public string ArchiveLogEntry {
            get {
                return this.ArchiveLogEntryField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveLogEntryField, value) != true)) {
                    this.ArchiveLogEntryField = value;
                    this.RaisePropertyChanged("ArchiveLogEntry");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class AttachLogMediaRequest : WF.Player.Core.Live.APIRequest {
        
        
        private string LogGuidField;
        
        
        private WF.Player.Core.Live.LogPhoto PhotosField;
        
        
        public string LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
        
        
        public WF.Player.Core.Live.LogPhoto Photos {
            get {
                return this.PhotosField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotosField, value) != true)) {
                    this.PhotosField = value;
                    this.RaisePropertyChanged("Photos");
                }
            }
        }
    }
    
    
    
    
    
    public  class DeleteLogMediaRequest : WF.Player.Core.Live.APIRequest {
        
        
        private string LogGuidField;
        
        
        private string MediaGuidField;
        
        
        public string LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
        
        
        public string MediaGuid {
            get {
                return this.MediaGuidField;
            }
            set {
                if ((this.MediaGuidField.Equals(value) != true)) {
                    this.MediaGuidField = value;
                    this.RaisePropertyChanged("MediaGuid");
                }
            }
        }
    }
    
    
    
    
    
    public  class UpdateLogMediaRequest : WF.Player.Core.Live.APIRequest {
        
        
        private string CaptionField;
        
        
        private string DescriptionField;
        
        
        private string LogGuidField;
        
        
        private string MediaGuidField;
        
        
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        
        public string LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
        
        
        public string MediaGuid {
            get {
                return this.MediaGuidField;
            }
            set {
                if ((this.MediaGuidField.Equals(value) != true)) {
                    this.MediaGuidField = value;
                    this.RaisePropertyChanged("MediaGuid");
                }
            }
        }
    }
    
    
    
    
    
    public  class GetCountryListRequest : WF.Player.Core.Live.APIRequest {
    }
    
    
    
    
    
    public  class UpdateListingVisibilityRequest : WF.Player.Core.Live.APIRequest {
        
        
        private bool MakeListingPublicField;
        
        
        private string WGCodeField;
        
        
        public bool MakeListingPublic {
            get {
                return this.MakeListingPublicField;
            }
            set {
                if ((this.MakeListingPublicField.Equals(value) != true)) {
                    this.MakeListingPublicField = value;
                    this.RaisePropertyChanged("MakeListingPublic");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class UpdateCartridgeMediaRequest : WF.Player.Core.Live.APIRequest {
        
        
        private byte IconField;
        
        
        private byte PosterField;
        
        
        private string WGCodeField;
        
        
        public byte Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        
        public byte Poster {
            get {
                return this.PosterField;
            }
            set {
                if ((object.ReferenceEquals(this.PosterField, value) != true)) {
                    this.PosterField = value;
                    this.RaisePropertyChanged("Poster");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class UpdateListingRequest : WF.Player.Core.Live.APIRequest {
        
        
        private System.Nullable<int> ActivityIntField;
        
        
        private string AuthorNameField;
        
        
        private string CartridgeDetailsDescriptionField;
        
        
        private System.Nullable<short> CompletionTimeField;
        
        
        private System.Nullable<short> CountryIDField;
        
        
        private System.Nullable<double> LatitudeField;
        
        
        private System.Nullable<bool> ListInDirectoryField;
        
        
        private System.Nullable<double> LongitudeField;
        
        
        private string NameField;
        
        
        private string SearchPageDescriptionField;
        
        
        private string StartingLocationDescriptionField;
        
        
        private System.Nullable<short> StateIDField;
        
        
        private string WGCodeField;
        
        
        public System.Nullable<int> ActivityInt {
            get {
                return this.ActivityIntField;
            }
            set {
                if ((this.ActivityIntField.Equals(value) != true)) {
                    this.ActivityIntField = value;
                    this.RaisePropertyChanged("ActivityInt");
                }
            }
        }
        
        
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        
        public string CartridgeDetailsDescription {
            get {
                return this.CartridgeDetailsDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CartridgeDetailsDescriptionField, value) != true)) {
                    this.CartridgeDetailsDescriptionField = value;
                    this.RaisePropertyChanged("CartridgeDetailsDescription");
                }
            }
        }
        
        
        public System.Nullable<short> CompletionTime {
            get {
                return this.CompletionTimeField;
            }
            set {
                if ((this.CompletionTimeField.Equals(value) != true)) {
                    this.CompletionTimeField = value;
                    this.RaisePropertyChanged("CompletionTime");
                }
            }
        }
        
        
        public System.Nullable<short> CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        
        public System.Nullable<bool> ListInDirectory {
            get {
                return this.ListInDirectoryField;
            }
            set {
                if ((this.ListInDirectoryField.Equals(value) != true)) {
                    this.ListInDirectoryField = value;
                    this.RaisePropertyChanged("ListInDirectory");
                }
            }
        }
        
        
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        
        public string SearchPageDescription {
            get {
                return this.SearchPageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchPageDescriptionField, value) != true)) {
                    this.SearchPageDescriptionField = value;
                    this.RaisePropertyChanged("SearchPageDescription");
                }
            }
        }
        
        
        public string StartingLocationDescription {
            get {
                return this.StartingLocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StartingLocationDescriptionField, value) != true)) {
                    this.StartingLocationDescriptionField = value;
                    this.RaisePropertyChanged("StartingLocationDescription");
                }
            }
        }
        
        
        public System.Nullable<short> StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class UploadCartridgePlaythroughsRequest : WF.Player.Core.Live.APIRequest {
        
        
        private WF.Player.Core.Live.CartridgePlaythrough PlaythroughsField;
        
        
        private string WGCodeField;
        
        
        public WF.Player.Core.Live.CartridgePlaythrough Playthroughs {
            get {
                return this.PlaythroughsField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaythroughsField, value) != true)) {
                    this.PlaythroughsField = value;
                    this.RaisePropertyChanged("Playthroughs");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class GetCartridgeVariablesRequest : WF.Player.Core.Live.APIRequest {
        
        
        private WF.Player.Core.Live.CartridgeVariableScope ScopesField;
        
        
        private string VariableNamesField;
        
        
        private string WGCodeField;
        
        
        public WF.Player.Core.Live.CartridgeVariableScope Scopes {
            get {
                return this.ScopesField;
            }
            set {
                if ((object.ReferenceEquals(this.ScopesField, value) != true)) {
                    this.ScopesField = value;
                    this.RaisePropertyChanged("Scopes");
                }
            }
        }
        
        
        public string VariableNames {
            get {
                return this.VariableNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableNamesField, value) != true)) {
                    this.VariableNamesField = value;
                    this.RaisePropertyChanged("VariableNames");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class SetCartridgeVariablesRequest : WF.Player.Core.Live.APIRequest {
        
        
        private WF.Player.Core.Live.CartridgeVariable VariablesField;
        
        
        private string WGCodeField;
        
        
        public WF.Player.Core.Live.CartridgeVariable Variables {
            get {
                return this.VariablesField;
            }
            set {
                if ((object.ReferenceEquals(this.VariablesField, value) != true)) {
                    this.VariablesField = value;
                    this.RaisePropertyChanged("Variables");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class TestRequest : WF.Player.Core.Live.APIRequest {
    }
    
    
    
    
    
    public  class CartridgeSearchArguments : object {
        
        
        
        private string CartridgeNameField;
        
        
        private System.Nullable<short> CountryIDField;
        
        
        private string ExternalAuthorNameOrGroupNameField;
        
        
        private System.Nullable<bool> IsOpenSourceField;
        
        
        private System.Nullable<bool> IsPlayAnywhereField;
        
        
        private System.Nullable<double> LatitudeField;
        
        
        private System.Nullable<double> LongitudeField;
        
        
        private System.Nullable<WF.Player.Core.Live.CartridgeSearchArguments.OrderBy> OrderSearchByField;
        
        
        private System.Nullable<double> SearchRadiusInKmField;
        
        
        private System.Nullable<short> StateIDField;
        
        
        private System.Nullable<bool> UserHasCompletedField;
        
        
        private System.Nullable<bool> UserHasNotPlayedField;
        
        
        private System.Nullable<bool> UserHasPartiallyPlayedField;
        
        
        private System.Nullable<bool> UserOwnsField;
        
        
        
        public string CartridgeName {
            get {
                return this.CartridgeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CartridgeNameField, value) != true)) {
                    this.CartridgeNameField = value;
                    this.RaisePropertyChanged("CartridgeName");
                }
            }
        }
        
        
        public System.Nullable<short> CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        
        public string ExternalAuthorNameOrGroupName {
            get {
                return this.ExternalAuthorNameOrGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalAuthorNameOrGroupNameField, value) != true)) {
                    this.ExternalAuthorNameOrGroupNameField = value;
                    this.RaisePropertyChanged("ExternalAuthorNameOrGroupName");
                }
            }
        }
        
        
        public System.Nullable<bool> IsOpenSource {
            get {
                return this.IsOpenSourceField;
            }
            set {
                if ((this.IsOpenSourceField.Equals(value) != true)) {
                    this.IsOpenSourceField = value;
                    this.RaisePropertyChanged("IsOpenSource");
                }
            }
        }
        
        
        public System.Nullable<bool> IsPlayAnywhere {
            get {
                return this.IsPlayAnywhereField;
            }
            set {
                if ((this.IsPlayAnywhereField.Equals(value) != true)) {
                    this.IsPlayAnywhereField = value;
                    this.RaisePropertyChanged("IsPlayAnywhere");
                }
            }
        }
        
        
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        
        public System.Nullable<WF.Player.Core.Live.CartridgeSearchArguments.OrderBy> OrderSearchBy {
            get {
                return this.OrderSearchByField;
            }
            set {
                if ((this.OrderSearchByField.Equals(value) != true)) {
                    this.OrderSearchByField = value;
                    this.RaisePropertyChanged("OrderSearchBy");
                }
            }
        }
        
        
        public System.Nullable<double> SearchRadiusInKm {
            get {
                return this.SearchRadiusInKmField;
            }
            set {
                if ((this.SearchRadiusInKmField.Equals(value) != true)) {
                    this.SearchRadiusInKmField = value;
                    this.RaisePropertyChanged("SearchRadiusInKm");
                }
            }
        }
        
        
        public System.Nullable<short> StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        
        public System.Nullable<bool> UserHasCompleted {
            get {
                return this.UserHasCompletedField;
            }
            set {
                if ((this.UserHasCompletedField.Equals(value) != true)) {
                    this.UserHasCompletedField = value;
                    this.RaisePropertyChanged("UserHasCompleted");
                }
            }
        }
        
        
        public System.Nullable<bool> UserHasNotPlayed {
            get {
                return this.UserHasNotPlayedField;
            }
            set {
                if ((this.UserHasNotPlayedField.Equals(value) != true)) {
                    this.UserHasNotPlayedField = value;
                    this.RaisePropertyChanged("UserHasNotPlayed");
                }
            }
        }
        
        
        public System.Nullable<bool> UserHasPartiallyPlayed {
            get {
                return this.UserHasPartiallyPlayedField;
            }
            set {
                if ((this.UserHasPartiallyPlayedField.Equals(value) != true)) {
                    this.UserHasPartiallyPlayedField = value;
                    this.RaisePropertyChanged("UserHasPartiallyPlayed");
                }
            }
        }
        
        
        public System.Nullable<bool> UserOwns {
            get {
                return this.UserOwnsField;
            }
            set {
                if ((this.UserOwnsField.Equals(value) != true)) {
                    this.UserOwnsField = value;
                    this.RaisePropertyChanged("UserOwns");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        
        
        public enum OrderBy : int {
            
            
            PublishDate = 2,
            
            
            Distance = 0,
            
            
            Name = 1,
            
            
            CompletionTime = 3,
        }
    }
    
    
    
    
    
    public  class CartridgeLog : object {
        
        
        private System.DateTime DateField;
        
        
        private string GuidField;
        
        
        private WF.Player.Core.Live.LogEntry.LogTypes LogTypeField;
        
        
        private string LogTypeIconUrlField;
        
        
        private int LogTypeIntField;
        
        
        private WF.Player.Core.Live.LogPhoto PhotosField;
        
        
        private string TextField;
        
        
        private string UserAvatarUrlField;
        
        
        private string UserGuidField;
        
        
        private string UserNameField;
        
        
        
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        
        public string Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        
        public WF.Player.Core.Live.LogEntry.LogTypes LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((this.LogTypeField.Equals(value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
        
        
        public string LogTypeIconUrl {
            get {
                return this.LogTypeIconUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTypeIconUrlField, value) != true)) {
                    this.LogTypeIconUrlField = value;
                    this.RaisePropertyChanged("LogTypeIconUrl");
                }
            }
        }
        
        
        public int LogTypeInt {
            get {
                return this.LogTypeIntField;
            }
            set {
                if ((this.LogTypeIntField.Equals(value) != true)) {
                    this.LogTypeIntField = value;
                    this.RaisePropertyChanged("LogTypeInt");
                }
            }
        }
        
        
        public WF.Player.Core.Live.LogPhoto Photos {
            get {
                return this.PhotosField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotosField, value) != true)) {
                    this.PhotosField = value;
                    this.RaisePropertyChanged("Photos");
                }
            }
        }
        
        
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        
        public string UserAvatarUrl {
            get {
                return this.UserAvatarUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAvatarUrlField, value) != true)) {
                    this.UserAvatarUrlField = value;
                    this.RaisePropertyChanged("UserAvatarUrl");
                }
            }
        }
        
        
        public string UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    
    
    
    
    public  class LogEntry : object {
        
        
        private bool CartridgeArchivedField;
        
        private bool CartridgeDisabledField;
        
        private string CartridgeIconField;
        
        private string CartridgeNameField;
        
        private WF.Player.Core.Live.LogResult LogEntryResultField;
        
        private WF.Player.Core.Live.LogMedia MediaField;
        
        private string WGCodeField;
        
        private string crossPostToGeocachesField;
        
        private System.Collections.Generic.Dictionary<WF.Player.Core.Live.LogEntry.InternalInfo, string> internalInfoField;
        
        private bool isArchivedField;
        
        private System.DateTime logDateField;
        
        private string logDateStringField;
        
        private string logGUIDField;
        
        private string logTextField;
        
        private WF.Player.Core.Live.LogEntry.LogTypes logTypeField;
        
        private string logTypeIconUrlField;
        
        private string logTypeStringField;
        
        private int userAchievementsField;
        
        private string userAvatarField;
        
        private bool userCanDeleteField;
        
        private bool userCanEditField;
        
        private int userCompletionsField;
        
        private string userGUIDField;
        
        private string userMembershipLevelField;
        
        private string userNameField;
        
        
        public bool CartridgeArchived {
            get {
                return this.CartridgeArchivedField;
            }
            set {
                if ((this.CartridgeArchivedField.Equals(value) != true)) {
                    this.CartridgeArchivedField = value;
                    this.RaisePropertyChanged("CartridgeArchived");
                }
            }
        }
        
        
        public bool CartridgeDisabled {
            get {
                return this.CartridgeDisabledField;
            }
            set {
                if ((this.CartridgeDisabledField.Equals(value) != true)) {
                    this.CartridgeDisabledField = value;
                    this.RaisePropertyChanged("CartridgeDisabled");
                }
            }
        }
        
        
        public string CartridgeIcon {
            get {
                return this.CartridgeIconField;
            }
            set {
                if ((object.ReferenceEquals(this.CartridgeIconField, value) != true)) {
                    this.CartridgeIconField = value;
                    this.RaisePropertyChanged("CartridgeIcon");
                }
            }
        }
        
        
        public string CartridgeName {
            get {
                return this.CartridgeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CartridgeNameField, value) != true)) {
                    this.CartridgeNameField = value;
                    this.RaisePropertyChanged("CartridgeName");
                }
            }
        }
        
        
        public WF.Player.Core.Live.LogResult LogEntryResult {
            get {
                return this.LogEntryResultField;
            }
            set {
                if ((object.ReferenceEquals(this.LogEntryResultField, value) != true)) {
                    this.LogEntryResultField = value;
                    this.RaisePropertyChanged("LogEntryResult");
                }
            }
        }
        
        
        public WF.Player.Core.Live.LogMedia Media {
            get {
                return this.MediaField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaField, value) != true)) {
                    this.MediaField = value;
                    this.RaisePropertyChanged("Media");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
        
        
        public string crossPostToGeocaches {
            get {
                return this.crossPostToGeocachesField;
            }
            set {
                if ((object.ReferenceEquals(this.crossPostToGeocachesField, value) != true)) {
                    this.crossPostToGeocachesField = value;
                    this.RaisePropertyChanged("crossPostToGeocaches");
                }
            }
        }
        
        
        public System.Collections.Generic.Dictionary<WF.Player.Core.Live.LogEntry.InternalInfo, string> internalInfo {
            get {
                return this.internalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.internalInfoField, value) != true)) {
                    this.internalInfoField = value;
                    this.RaisePropertyChanged("internalInfo");
                }
            }
        }
        
        
        public bool isArchived {
            get {
                return this.isArchivedField;
            }
            set {
                if ((this.isArchivedField.Equals(value) != true)) {
                    this.isArchivedField = value;
                    this.RaisePropertyChanged("isArchived");
                }
            }
        }
        
        
        public System.DateTime logDate {
            get {
                return this.logDateField;
            }
            set {
                if ((this.logDateField.Equals(value) != true)) {
                    this.logDateField = value;
                    this.RaisePropertyChanged("logDate");
                }
            }
        }
        
        
        public string logDateString {
            get {
                return this.logDateStringField;
            }
            set {
                if ((object.ReferenceEquals(this.logDateStringField, value) != true)) {
                    this.logDateStringField = value;
                    this.RaisePropertyChanged("logDateString");
                }
            }
        }
        
        
        public string logGUID {
            get {
                return this.logGUIDField;
            }
            set {
                if ((this.logGUIDField.Equals(value) != true)) {
                    this.logGUIDField = value;
                    this.RaisePropertyChanged("logGUID");
                }
            }
        }
        
        
        public string logText {
            get {
                return this.logTextField;
            }
            set {
                if ((object.ReferenceEquals(this.logTextField, value) != true)) {
                    this.logTextField = value;
                    this.RaisePropertyChanged("logText");
                }
            }
        }
        
        
        public WF.Player.Core.Live.LogEntry.LogTypes logType {
            get {
                return this.logTypeField;
            }
            set {
                if ((this.logTypeField.Equals(value) != true)) {
                    this.logTypeField = value;
                    this.RaisePropertyChanged("logType");
                }
            }
        }
        
        
        public string logTypeIconUrl {
            get {
                return this.logTypeIconUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.logTypeIconUrlField, value) != true)) {
                    this.logTypeIconUrlField = value;
                    this.RaisePropertyChanged("logTypeIconUrl");
                }
            }
        }
        
        
        public string logTypeString {
            get {
                return this.logTypeStringField;
            }
            set {
                if ((object.ReferenceEquals(this.logTypeStringField, value) != true)) {
                    this.logTypeStringField = value;
                    this.RaisePropertyChanged("logTypeString");
                }
            }
        }
        
        
        public int userAchievements {
            get {
                return this.userAchievementsField;
            }
            set {
                if ((this.userAchievementsField.Equals(value) != true)) {
                    this.userAchievementsField = value;
                    this.RaisePropertyChanged("userAchievements");
                }
            }
        }
        
        
        public string userAvatar {
            get {
                return this.userAvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.userAvatarField, value) != true)) {
                    this.userAvatarField = value;
                    this.RaisePropertyChanged("userAvatar");
                }
            }
        }
        
        
        public bool userCanDelete {
            get {
                return this.userCanDeleteField;
            }
            set {
                if ((this.userCanDeleteField.Equals(value) != true)) {
                    this.userCanDeleteField = value;
                    this.RaisePropertyChanged("userCanDelete");
                }
            }
        }
        
        
        public bool userCanEdit {
            get {
                return this.userCanEditField;
            }
            set {
                if ((this.userCanEditField.Equals(value) != true)) {
                    this.userCanEditField = value;
                    this.RaisePropertyChanged("userCanEdit");
                }
            }
        }
        
        
        public int userCompletions {
            get {
                return this.userCompletionsField;
            }
            set {
                if ((this.userCompletionsField.Equals(value) != true)) {
                    this.userCompletionsField = value;
                    this.RaisePropertyChanged("userCompletions");
                }
            }
        }
        
        
        public string userGUID {
            get {
                return this.userGUIDField;
            }
            set {
                if ((this.userGUIDField.Equals(value) != true)) {
                    this.userGUIDField = value;
                    this.RaisePropertyChanged("userGUID");
                }
            }
        }
        
        
        public string userMembershipLevel {
            get {
                return this.userMembershipLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.userMembershipLevelField, value) != true)) {
                    this.userMembershipLevelField = value;
                    this.RaisePropertyChanged("userMembershipLevel");
                }
            }
        }
        
        
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        
        
        public enum LogTypes : int {
            
            
            CartridgeComplete = 0,
            
            
            IncompletePlaythrough = 1,
            
            
            Note = 2,
            
            
            DisableListing = 3,
            
            
            EnableListing = 4,
            
            
            Archive = 5,
            
            
            VersionUpdate = 6,
            
            
            VersionRestore = 7,
            
            
            Unarchive = 8,
            
            
            AdminLock = 9,
            
            
            AdminUnlock = 10,
            
            
            RequestArchive = 11,
            
            
            AdminNote = 12,
            
            
            NeedsUpdating = 13,
        }
        
        
        
        public enum InternalInfo : int {
            
            
            CartridgeName = 0,
            
            
            isArchived = 1,
            
            
            CartridgeIcon = 2,
            
            
            isDisabled = 3,
        }
    }
    
    
    
    
    
    public  class LogPhoto : object {
        
        private string CaptionField;
        
        
        private string DescriptionField;
        
        
        private bool IsThumbnailField;
        
        
        private byte PhotoField;
        
        
        private string URLField;
               
        
        public string Caption {
            get {
                return this.CaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CaptionField, value) != true)) {
                    this.CaptionField = value;
                    this.RaisePropertyChanged("Caption");
                }
            }
        }
        
        
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        
        public bool IsThumbnail {
            get {
                return this.IsThumbnailField;
            }
            set {
                if ((this.IsThumbnailField.Equals(value) != true)) {
                    this.IsThumbnailField = value;
                    this.RaisePropertyChanged("IsThumbnail");
                }
            }
        }
        
        
        public byte Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    
    
    public enum CartridgeActivities : int {
        
        
        Geocache = 0,
        
        
        TourGuide = 1,
        
        
        Puzzle = 2,
        
        
        Story = 3,
        
        
        Action = 4,
        
        
        Arcade = 5,
        
        
        Challenge = 6,
    }
    
    
    
    
    
    public  class CartridgePlaythrough : object {
        
        
        private System.Nullable<double> AltitudeDifferenceFromStartInMetersField;
        
        
        private System.Nullable<int> CountOfCharactersEncounteredField;
        
        
        private System.Nullable<int> CountOfZonesVisitedField;
        
        
        private System.Nullable<double> CumulativeAltitudeAscentInMetersField;
        
        
        private System.Nullable<double> CumulativeAltitudeDescentInMetersField;
        
        
        private System.Nullable<double> DistanceCoveredInKmField;
        
        
        private System.Nullable<System.DateTime> EndTimeField;
        
        
        private System.Nullable<bool> IsGameOverField;
        
        
        private System.Nullable<bool> IsResumingGameField;
        
        
        private System.Nullable<bool> MetTheAuthorField;
        
        
        private System.Nullable<System.DateTime> StartTimeField;
        
        
        private System.Nullable<int> TotalMinutesPlayedField;
        
        
        private System.Nullable<int> TotalPlayersMetField;
        
        
        
        public System.Nullable<double> AltitudeDifferenceFromStartInMeters {
            get {
                return this.AltitudeDifferenceFromStartInMetersField;
            }
            set {
                if ((this.AltitudeDifferenceFromStartInMetersField.Equals(value) != true)) {
                    this.AltitudeDifferenceFromStartInMetersField = value;
                    this.RaisePropertyChanged("AltitudeDifferenceFromStartInMeters");
                }
            }
        }
        
        
        public System.Nullable<int> CountOfCharactersEncountered {
            get {
                return this.CountOfCharactersEncounteredField;
            }
            set {
                if ((this.CountOfCharactersEncounteredField.Equals(value) != true)) {
                    this.CountOfCharactersEncounteredField = value;
                    this.RaisePropertyChanged("CountOfCharactersEncountered");
                }
            }
        }
        
        
        public System.Nullable<int> CountOfZonesVisited {
            get {
                return this.CountOfZonesVisitedField;
            }
            set {
                if ((this.CountOfZonesVisitedField.Equals(value) != true)) {
                    this.CountOfZonesVisitedField = value;
                    this.RaisePropertyChanged("CountOfZonesVisited");
                }
            }
        }
        
        
        public System.Nullable<double> CumulativeAltitudeAscentInMeters {
            get {
                return this.CumulativeAltitudeAscentInMetersField;
            }
            set {
                if ((this.CumulativeAltitudeAscentInMetersField.Equals(value) != true)) {
                    this.CumulativeAltitudeAscentInMetersField = value;
                    this.RaisePropertyChanged("CumulativeAltitudeAscentInMeters");
                }
            }
        }
        
        
        public System.Nullable<double> CumulativeAltitudeDescentInMeters {
            get {
                return this.CumulativeAltitudeDescentInMetersField;
            }
            set {
                if ((this.CumulativeAltitudeDescentInMetersField.Equals(value) != true)) {
                    this.CumulativeAltitudeDescentInMetersField = value;
                    this.RaisePropertyChanged("CumulativeAltitudeDescentInMeters");
                }
            }
        }
        
        
        public System.Nullable<double> DistanceCoveredInKm {
            get {
                return this.DistanceCoveredInKmField;
            }
            set {
                if ((this.DistanceCoveredInKmField.Equals(value) != true)) {
                    this.DistanceCoveredInKmField = value;
                    this.RaisePropertyChanged("DistanceCoveredInKm");
                }
            }
        }
        
        
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        
        public System.Nullable<bool> IsGameOver {
            get {
                return this.IsGameOverField;
            }
            set {
                if ((this.IsGameOverField.Equals(value) != true)) {
                    this.IsGameOverField = value;
                    this.RaisePropertyChanged("IsGameOver");
                }
            }
        }
        
        
        public System.Nullable<bool> IsResumingGame {
            get {
                return this.IsResumingGameField;
            }
            set {
                if ((this.IsResumingGameField.Equals(value) != true)) {
                    this.IsResumingGameField = value;
                    this.RaisePropertyChanged("IsResumingGame");
                }
            }
        }
        
        
        public System.Nullable<bool> MetTheAuthor {
            get {
                return this.MetTheAuthorField;
            }
            set {
                if ((this.MetTheAuthorField.Equals(value) != true)) {
                    this.MetTheAuthorField = value;
                    this.RaisePropertyChanged("MetTheAuthor");
                }
            }
        }
        
        
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        
        public System.Nullable<int> TotalMinutesPlayed {
            get {
                return this.TotalMinutesPlayedField;
            }
            set {
                if ((this.TotalMinutesPlayedField.Equals(value) != true)) {
                    this.TotalMinutesPlayedField = value;
                    this.RaisePropertyChanged("TotalMinutesPlayed");
                }
            }
        }
        
        
        public System.Nullable<int> TotalPlayersMet {
            get {
                return this.TotalPlayersMetField;
            }
            set {
                if ((this.TotalPlayersMetField.Equals(value) != true)) {
                    this.TotalPlayersMetField = value;
                    this.RaisePropertyChanged("TotalPlayersMet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    
    
    public enum CartridgeVariableScope : int {
        
        
        User = 0,
        
        
        UserSession = 1,
        
        
        UserGroup = 2,
        
        
        UserGroupSession = 3,
        
        
        Cartridge = 4,
    }
    
    
    
    
    
    public  class CartridgeVariable : object {
        
        private System.Nullable<int> ExpiresInSecondsField;
        
        
        private string NameField;
        
        
        private WF.Player.Core.Live.CartridgeVariableScope ScopeField;
        
        
        private System.Nullable<int> SessionIDField;
        
        
        private string ValueField;
        
        
        public System.Nullable<int> ExpiresInSeconds {
            get {
                return this.ExpiresInSecondsField;
            }
            set {
                if ((this.ExpiresInSecondsField.Equals(value) != true)) {
                    this.ExpiresInSecondsField = value;
                    this.RaisePropertyChanged("ExpiresInSeconds");
                }
            }
        }
        
        
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        
        public WF.Player.Core.Live.CartridgeVariableScope Scope {
            get {
                return this.ScopeField;
            }
            set {
                if ((this.ScopeField.Equals(value) != true)) {
                    this.ScopeField = value;
                    this.RaisePropertyChanged("Scope");
                }
            }
        }
        
        
        public System.Nullable<int> SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    public  class APIResponse : object {
        
        
        private WF.Player.Core.Live.StatusResponse StatusField;
        
        
        
        
        public WF.Player.Core.Live.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    
    
    
    
    public  class StatusResponse : object {
        
        
        private short StatusCodeField;
        
        
        private string StatusMessageField;
        
        
        public short StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    
    
    
    
    public  class GetCartridgeInfoResponse : WF.Player.Core.Live.APIResponse {
        
        
        private WF.Player.Core.Live.WherigoCartridge CartridgeField;
        
        
        private WF.Player.Core.Live.CartridgeUserInformation UserInformationField;
        
        
        public WF.Player.Core.Live.WherigoCartridge Cartridge {
            get {
                return this.CartridgeField;
            }
            set {
                if ((object.ReferenceEquals(this.CartridgeField, value) != true)) {
                    this.CartridgeField = value;
                    this.RaisePropertyChanged("Cartridge");
                }
            }
        }
        
        
        public WF.Player.Core.Live.CartridgeUserInformation UserInformation {
            get {
                return this.UserInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInformationField, value) != true)) {
                    this.UserInformationField = value;
                    this.RaisePropertyChanged("UserInformation");
                }
            }
        }
    }
    
    
    
    
    
    public  class SearchCartridgesResponse : WF.Player.Core.Live.APIResponse {
        
        
        private WF.Player.Core.Live.CartridgeSearchResult[] CartridgesField;
        
        
        private int TotalSearchResultsField;
        
        
        public WF.Player.Core.Live.CartridgeSearchResult[] Cartridges {
            get {
                return this.CartridgesField;
            }
            set {
                if ((object.ReferenceEquals(this.CartridgesField, value) != true)) {
                    this.CartridgesField = value;
                    this.RaisePropertyChanged("Cartridges");
                }
            }
        }
        
        
        public int TotalSearchResults {
            get {
                return this.TotalSearchResultsField;
            }
            set {
                if ((this.TotalSearchResultsField.Equals(value) != true)) {
                    this.TotalSearchResultsField = value;
                    this.RaisePropertyChanged("TotalSearchResults");
                }
            }
        }
    }
    
    
    
    
    
    public  class DownloadCartridgeResponse : WF.Player.Core.Live.APIResponse {
        
        
        private byte[] CartridgeBytesField;
        
        
        public byte[] CartridgeBytes {
            get {
                return this.CartridgeBytesField;
            }
            set {
                if ((object.ReferenceEquals(this.CartridgeBytesField, value) != true)) {
                    this.CartridgeBytesField = value;
                    this.RaisePropertyChanged("CartridgeBytes");
                }
            }
        }
    }
    
    
    
    
    
    public  class UserCompletedCartridgeResponse : WF.Player.Core.Live.APIResponse {
        
        
        private bool OtherUserCompletionSuccessfullyMarkedField;
        
        
        public bool OtherUserCompletionSuccessfullyMarked {
            get {
                return this.OtherUserCompletionSuccessfullyMarkedField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherUserCompletionSuccessfullyMarkedField, value) != true)) {
                    this.OtherUserCompletionSuccessfullyMarkedField = value;
                    this.RaisePropertyChanged("OtherUserCompletionSuccessfullyMarked");
                }
            }
        }
    }
    
    
    
    
    
    public  class GetCartridgeLogsResponse : WF.Player.Core.Live.APIResponse {
        
        
        private WF.Player.Core.Live.CartridgeLog LogsField;
        
        
        public WF.Player.Core.Live.CartridgeLog Logs {
            get {
                return this.LogsField;
            }
            set {
                if ((object.ReferenceEquals(this.LogsField, value) != true)) {
                    this.LogsField = value;
                    this.RaisePropertyChanged("Logs");
                }
            }
        }
    }
    
    
    
    
    
    public  class AddCartridgeLogResponse : WF.Player.Core.Live.APIResponse {
        
        
        private string LogGuidField;
        
        
        public string LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
    }
    
    
    
    
    
    public  class GetCartridgeVersionsResponse : WF.Player.Core.Live.APIResponse {
        
        
        private bool CanDownloadSourceCodeField;
        
        
        private WF.Player.Core.Live.VersionInformation VersionsField;
        
        
        public bool CanDownloadSourceCode {
            get {
                return this.CanDownloadSourceCodeField;
            }
            set {
                if ((this.CanDownloadSourceCodeField.Equals(value) != true)) {
                    this.CanDownloadSourceCodeField = value;
                    this.RaisePropertyChanged("CanDownloadSourceCode");
                }
            }
        }
        
        
        public WF.Player.Core.Live.VersionInformation Versions {
            get {
                return this.VersionsField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionsField, value) != true)) {
                    this.VersionsField = value;
                    this.RaisePropertyChanged("Versions");
                }
            }
        }
    }
    
    
    
    
    
    public  class GetCartridgeGWZResponse : WF.Player.Core.Live.APIResponse {
        
        
        private byte GWZField;
        
        
        public byte GWZ {
            get {
                return this.GWZField;
            }
            set {
                if ((object.ReferenceEquals(this.GWZField, value) != true)) {
                    this.GWZField = value;
                    this.RaisePropertyChanged("GWZ");
                }
            }
        }
    }
    
    
    
    
    
    public  class UpdateCartridgeGWZResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    public  class UploadNewCartridgeResponse : WF.Player.Core.Live.APIResponse {
        
        
        private string WGCodeField;
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
    }
    
    
    
    
    
    public  class UpdateLogResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    public  class ArchiveLogResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    public  class UpdateCartridgeContributorsResponse : WF.Player.Core.Live.APIResponse {
        
        
        private bool SuccessField;
        
        
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((object.ReferenceEquals(this.SuccessField, value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
    }
    
    
    
    
    
    public  class ArchiveCartridgeResponse : WF.Player.Core.Live.APIResponse {
        
        
        private string LogGuidField;
        
        
        public string LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
    }
    
    
    
    
    
    public  class AttachLogMediaResponse : WF.Player.Core.Live.APIResponse {
        
        
        private WF.Player.Core.Live.APIResponse ResultsField;
        
        
        public WF.Player.Core.Live.APIResponse Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
    }
    
    
    
    
    
    public  class DeleteLogMediaResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    public  class UpdateLogMediaResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    public  class GetCountryListResponse : WF.Player.Core.Live.APIResponse {
        
        
        private short CountryIDsField;
        
        
        private string CountryNamesField;
        
        
        public short CountryIDs {
            get {
                return this.CountryIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDsField, value) != true)) {
                    this.CountryIDsField = value;
                    this.RaisePropertyChanged("CountryIDs");
                }
            }
        }
        
        
        public string CountryNames {
            get {
                return this.CountryNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNamesField, value) != true)) {
                    this.CountryNamesField = value;
                    this.RaisePropertyChanged("CountryNames");
                }
            }
        }
    }
    
    
    
    
    
    public  class UpdateListingVisibilityResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    public  class UpdateCartridgeMediaResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    public  class UpdateListingResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    public  class UploadCartridgePlaythroughsResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    public  class GetCartridgeVariablesResponse : WF.Player.Core.Live.APIResponse {
        
        
        private WF.Player.Core.Live.CartridgeVariable VariablesField;
        
        
        public WF.Player.Core.Live.CartridgeVariable Variables {
            get {
                return this.VariablesField;
            }
            set {
                if ((object.ReferenceEquals(this.VariablesField, value) != true)) {
                    this.VariablesField = value;
                    this.RaisePropertyChanged("Variables");
                }
            }
        }
    }
    
    
    
    
    
    public  class SetCartridgeVariablesResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    public  class TestResponse : WF.Player.Core.Live.APIResponse {
    }
    
    
    
    
    
    
    public  class WherigoCartridge : object {
        
        private WF.Player.Core.Live.WherigoCartridge.ActivityTypes ActivityTypeField;
        
        
        private string AuthorCompanyField;
        
        
        private string AuthorNameField;
        
        
        private WF.Player.Core.Live.WherigoCartridge.CompletionTimes CompletionTimeField;
        
        
        private int CountryIDField;
        
        
        private System.Nullable<System.DateTime> DateAddedField;
        
        
        private System.Nullable<System.DateTime> DateLastPlayedField;
        
        
        private System.Nullable<System.DateTime> DateLastUpdatedField;
        
        
        private string IconFileURLField;
        
        
        private bool IsArchivedField;
        
        
        private bool IsDisabledField;
        
        
        private bool IsOpenSourceField;
        
        
        private bool IsPlayAnywhereField;
        
        
        private double LatitudeField;
        
        
        private string[] LinkedGeocacheGCsField;
        
        
        private System.Guid[] LinkedGeocacheGuidsField;
        
        
        private string[] LinkedGeocacheNamesField;
        
        
        private string LongDescriptionField;
        
        
        private double LongitudeField;
        
        
        private string NameField;
        
        
        private int NumberOfCompletionsField;
        
        
        private int NumberOfUsersWatchingField;
        
        
        private string PosterFileURLField;
        
        
        private string ShortDescriptionField;
        
        
        private int StateIDField;
        
        
        private int UniqueDownloadsField;
        
        
        private string WGCodeField;
        
        
        
        public WF.Player.Core.Live.WherigoCartridge.ActivityTypes ActivityType {
            get {
                return this.ActivityTypeField;
            }
            set {
                if ((this.ActivityTypeField.Equals(value) != true)) {
                    this.ActivityTypeField = value;
                    this.RaisePropertyChanged("ActivityType");
                }
            }
        }
        
        
        public string AuthorCompany {
            get {
                return this.AuthorCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorCompanyField, value) != true)) {
                    this.AuthorCompanyField = value;
                    this.RaisePropertyChanged("AuthorCompany");
                }
            }
        }
        
        
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        
        public WF.Player.Core.Live.WherigoCartridge.CompletionTimes CompletionTime {
            get {
                return this.CompletionTimeField;
            }
            set {
                if ((this.CompletionTimeField.Equals(value) != true)) {
                    this.CompletionTimeField = value;
                    this.RaisePropertyChanged("CompletionTime");
                }
            }
        }
        
        
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        
        public System.Nullable<System.DateTime> DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        
        public System.Nullable<System.DateTime> DateLastPlayed {
            get {
                return this.DateLastPlayedField;
            }
            set {
                if ((this.DateLastPlayedField.Equals(value) != true)) {
                    this.DateLastPlayedField = value;
                    this.RaisePropertyChanged("DateLastPlayed");
                }
            }
        }
        
        
        public System.Nullable<System.DateTime> DateLastUpdated {
            get {
                return this.DateLastUpdatedField;
            }
            set {
                if ((this.DateLastUpdatedField.Equals(value) != true)) {
                    this.DateLastUpdatedField = value;
                    this.RaisePropertyChanged("DateLastUpdated");
                }
            }
        }
        
        
        public string IconFileURL {
            get {
                return this.IconFileURLField;
            }
            set {
                if ((object.ReferenceEquals(this.IconFileURLField, value) != true)) {
                    this.IconFileURLField = value;
                    this.RaisePropertyChanged("IconFileURL");
                }
            }
        }
        
        
        public bool IsArchived {
            get {
                return this.IsArchivedField;
            }
            set {
                if ((this.IsArchivedField.Equals(value) != true)) {
                    this.IsArchivedField = value;
                    this.RaisePropertyChanged("IsArchived");
                }
            }
        }
        
        
        public bool IsDisabled {
            get {
                return this.IsDisabledField;
            }
            set {
                if ((this.IsDisabledField.Equals(value) != true)) {
                    this.IsDisabledField = value;
                    this.RaisePropertyChanged("IsDisabled");
                }
            }
        }
        
        
        public bool IsOpenSource {
            get {
                return this.IsOpenSourceField;
            }
            set {
                if ((this.IsOpenSourceField.Equals(value) != true)) {
                    this.IsOpenSourceField = value;
                    this.RaisePropertyChanged("IsOpenSource");
                }
            }
        }
        
        
        public bool IsPlayAnywhere {
            get {
                return this.IsPlayAnywhereField;
            }
            set {
                if ((this.IsPlayAnywhereField.Equals(value) != true)) {
                    this.IsPlayAnywhereField = value;
                    this.RaisePropertyChanged("IsPlayAnywhere");
                }
            }
        }
        
        
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        
        public string[] LinkedGeocacheGCs {
            get {
                return this.LinkedGeocacheGCsField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedGeocacheGCsField, value) != true)) {
                    this.LinkedGeocacheGCsField = value;
                    this.RaisePropertyChanged("LinkedGeocacheGCs");
                }
            }
        }
        
        
        public System.Guid[] LinkedGeocacheGuids {
            get {
                return this.LinkedGeocacheGuidsField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedGeocacheGuidsField, value) != true)) {
                    this.LinkedGeocacheGuidsField = value;
                    this.RaisePropertyChanged("LinkedGeocacheGuids");
                }
            }
        }
        
        
        public string[] LinkedGeocacheNames {
            get {
                return this.LinkedGeocacheNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedGeocacheNamesField, value) != true)) {
                    this.LinkedGeocacheNamesField = value;
                    this.RaisePropertyChanged("LinkedGeocacheNames");
                }
            }
        }
        
        
        public string LongDescription {
            get {
                return this.LongDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LongDescriptionField, value) != true)) {
                    this.LongDescriptionField = value;
                    this.RaisePropertyChanged("LongDescription");
                }
            }
        }
        
        
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        
        public int NumberOfCompletions {
            get {
                return this.NumberOfCompletionsField;
            }
            set {
                if ((this.NumberOfCompletionsField.Equals(value) != true)) {
                    this.NumberOfCompletionsField = value;
                    this.RaisePropertyChanged("NumberOfCompletions");
                }
            }
        }
        
        
        public int NumberOfUsersWatching {
            get {
                return this.NumberOfUsersWatchingField;
            }
            set {
                if ((this.NumberOfUsersWatchingField.Equals(value) != true)) {
                    this.NumberOfUsersWatchingField = value;
                    this.RaisePropertyChanged("NumberOfUsersWatching");
                }
            }
        }
        
        
        public string PosterFileURL {
            get {
                return this.PosterFileURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PosterFileURLField, value) != true)) {
                    this.PosterFileURLField = value;
                    this.RaisePropertyChanged("PosterFileURL");
                }
            }
        }
        
        
        public string ShortDescription {
            get {
                return this.ShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortDescriptionField, value) != true)) {
                    this.ShortDescriptionField = value;
                    this.RaisePropertyChanged("ShortDescription");
                }
            }
        }
        
        
        public int StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        
        public int UniqueDownloads {
            get {
                return this.UniqueDownloadsField;
            }
            set {
                if ((this.UniqueDownloadsField.Equals(value) != true)) {
                    this.UniqueDownloadsField = value;
                    this.RaisePropertyChanged("UniqueDownloads");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        
        
        public enum ActivityTypes : int {
            
            
            Geocache = 0,
            
            
            TourGuide = 1,
            
            
            Puzzle = 2,
            
            
            Story = 3,
            
            
            Action = 4,
            
            
            Arcade = 5,
            
            
            Challenge = 6,
        }
        
        
        
        public enum CompletionTimes : int {
            
            
            Unknown = 0,
            
            
            LessThanOneHour = 1,
            
            
            OneToTwoHours = 2,
            
            
            TwoToThreeHours = 3,
            
            
            ThreeToFourHours = 4,
            
            
            MoreThanFourHours = 5,
        }
    }
    
    
    
    
    
    public  class CartridgeUserInformation : object {
        
        
        private string UserGUIDField;
        
        
        private WF.Player.Core.Live.LogEntry UserLogsField;
        
        
        private string WGCodeField;
        
        
        private bool isUserWatchingCartridgeField;
        
        
        private bool userCanDownloadSourceField;
        
        
        private bool userIsOwnerField;
        
        
        private bool userIsReadWriteUserField;
        
        
        
        
        public string UserGUID {
            get {
                return this.UserGUIDField;
            }
            set {
                if ((this.UserGUIDField.Equals(value) != true)) {
                    this.UserGUIDField = value;
                    this.RaisePropertyChanged("UserGUID");
                }
            }
        }
        
        
        public WF.Player.Core.Live.LogEntry UserLogs {
            get {
                return this.UserLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLogsField, value) != true)) {
                    this.UserLogsField = value;
                    this.RaisePropertyChanged("UserLogs");
                }
            }
        }
        
        
        public string WGCode {
            get {
                return this.WGCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WGCodeField, value) != true)) {
                    this.WGCodeField = value;
                    this.RaisePropertyChanged("WGCode");
                }
            }
        }
        
        
        public bool isUserWatchingCartridge {
            get {
                return this.isUserWatchingCartridgeField;
            }
            set {
                if ((this.isUserWatchingCartridgeField.Equals(value) != true)) {
                    this.isUserWatchingCartridgeField = value;
                    this.RaisePropertyChanged("isUserWatchingCartridge");
                }
            }
        }
        
        
        public bool userCanDownloadSource {
            get {
                return this.userCanDownloadSourceField;
            }
            set {
                if ((this.userCanDownloadSourceField.Equals(value) != true)) {
                    this.userCanDownloadSourceField = value;
                    this.RaisePropertyChanged("userCanDownloadSource");
                }
            }
        }
        
        
        public bool userIsOwner {
            get {
                return this.userIsOwnerField;
            }
            set {
                if ((this.userIsOwnerField.Equals(value) != true)) {
                    this.userIsOwnerField = value;
                    this.RaisePropertyChanged("userIsOwner");
                }
            }
        }
        
        
        public bool userIsReadWriteUser {
            get {
                return this.userIsReadWriteUserField;
            }
            set {
                if ((this.userIsReadWriteUserField.Equals(value) != true)) {
                    this.userIsReadWriteUserField = value;
                    this.RaisePropertyChanged("userIsReadWriteUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    
    
    
    
    public  class CartridgeSearchResult : WF.Player.Core.Live.WherigoCartridge {
        
        
        private double DistanceFromCenterField;
        
        
        private bool UserHasCompletedField;
        
        
        private bool UserHasPartiallyPlayedField;
        
        
        public double DistanceFromCenter {
            get {
                return this.DistanceFromCenterField;
            }
            set {
                if ((this.DistanceFromCenterField.Equals(value) != true)) {
                    this.DistanceFromCenterField = value;
                    this.RaisePropertyChanged("DistanceFromCenter");
                }
            }
        }
        
        
        public bool UserHasCompleted {
            get {
                return this.UserHasCompletedField;
            }
            set {
                if ((this.UserHasCompletedField.Equals(value) != true)) {
                    this.UserHasCompletedField = value;
                    this.RaisePropertyChanged("UserHasCompleted");
                }
            }
        }
        
        
        public bool UserHasPartiallyPlayed {
            get {
                return this.UserHasPartiallyPlayedField;
            }
            set {
                if ((this.UserHasPartiallyPlayedField.Equals(value) != true)) {
                    this.UserHasPartiallyPlayedField = value;
                    this.RaisePropertyChanged("UserHasPartiallyPlayed");
                }
            }
        }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    public  class LogResult : object {
        
        
        private object GeocachingCrossPostingResultField;
        
        private string errorField;
        
        private string iconsEarnedField;
        
        private string logGUIDField;
        
        private WF.Player.Core.Live.LogEntry logargsField;
        
        
        
        public object GeocachingCrossPostingResult {
            get {
                return this.GeocachingCrossPostingResultField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocachingCrossPostingResultField, value) != true)) {
                    this.GeocachingCrossPostingResultField = value;
                    this.RaisePropertyChanged("GeocachingCrossPostingResult");
                }
            }
        }
        
        
        public string error {
            get {
                return this.errorField;
            }
            set {
                if ((object.ReferenceEquals(this.errorField, value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        
        public string iconsEarned {
            get {
                return this.iconsEarnedField;
            }
            set {
                if ((object.ReferenceEquals(this.iconsEarnedField, value) != true)) {
                    this.iconsEarnedField = value;
                    this.RaisePropertyChanged("iconsEarned");
                }
            }
        }
        
        
        public string logGUID {
            get {
                return this.logGUIDField;
            }
            set {
                if ((this.logGUIDField.Equals(value) != true)) {
                    this.logGUIDField = value;
                    this.RaisePropertyChanged("logGUID");
                }
            }
        }
        
        
        public WF.Player.Core.Live.LogEntry logargs {
            get {
                return this.logargsField;
            }
            set {
                if ((object.ReferenceEquals(this.logargsField, value) != true)) {
                    this.logargsField = value;
                    this.RaisePropertyChanged("logargs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    
    
    
    
    public  class LogMedia : object {
        
        
        
        private System.DateTime AddedOnField;
        
        
        private string DescriptionField;
        
        
        private string FileNameField;
        
        
        private string LogGUIDField;
        
        
        private string LogMediaGUIDField;
        
        
        private WF.Player.Core.Live.LogMedia.MediaTypes MediaTypeField;
        
        
        private string NameField;
        
        
        
        public System.DateTime AddedOn {
            get {
                return this.AddedOnField;
            }
            set {
                if ((this.AddedOnField.Equals(value) != true)) {
                    this.AddedOnField = value;
                    this.RaisePropertyChanged("AddedOn");
                }
            }
        }
        
        
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        
        public string LogGUID {
            get {
                return this.LogGUIDField;
            }
            set {
                if ((this.LogGUIDField.Equals(value) != true)) {
                    this.LogGUIDField = value;
                    this.RaisePropertyChanged("LogGUID");
                }
            }
        }
        
        
        public string LogMediaGUID {
            get {
                return this.LogMediaGUIDField;
            }
            set {
                if ((this.LogMediaGUIDField.Equals(value) != true)) {
                    this.LogMediaGUIDField = value;
                    this.RaisePropertyChanged("LogMediaGUID");
                }
            }
        }
        
        
        public WF.Player.Core.Live.LogMedia.MediaTypes MediaType {
            get {
                return this.MediaTypeField;
            }
            set {
                if ((this.MediaTypeField.Equals(value) != true)) {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
        
        
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        
        
        public enum MediaTypes : int {
            
            
            Picture = 0,
            
            
            Thumbnail = 1,
            
            
            Video = 2,
            
            
            GWZ = 3,
            
            
            PlayLog = 4,
        }
    }
    
    
    
    
    
    public  class VersionInformation : object {
        
        private bool SourceCodeIsAvailableField;
        
        
        private string UploadCommentsField;
        
        
        private string UploadedByField;
        
        
        private System.DateTime UploadedOnField;
        
        
        private int VersionNumberField;
        
        
        public bool SourceCodeIsAvailable {
            get {
                return this.SourceCodeIsAvailableField;
            }
            set {
                if ((this.SourceCodeIsAvailableField.Equals(value) != true)) {
                    this.SourceCodeIsAvailableField = value;
                    this.RaisePropertyChanged("SourceCodeIsAvailable");
                }
            }
        }
        
        
        public string UploadComments {
            get {
                return this.UploadCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadCommentsField, value) != true)) {
                    this.UploadCommentsField = value;
                    this.RaisePropertyChanged("UploadComments");
                }
            }
        }
        
        
        public string UploadedBy {
            get {
                return this.UploadedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UploadedByField, value) != true)) {
                    this.UploadedByField = value;
                    this.RaisePropertyChanged("UploadedBy");
                }
            }
        }
        
        
        public System.DateTime UploadedOn {
            get {
                return this.UploadedOnField;
            }
            set {
                if ((this.UploadedOnField.Equals(value) != true)) {
                    this.UploadedOnField = value;
                    this.RaisePropertyChanged("UploadedOn");
                }
            }
        }
        
        
        public int VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
